services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA:-/var/lib/postgresql/data}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

    # проверяем сервис бд
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: ${RUN_MIGRATIONS:-true}
      WORKERS: ${WORKERS:-2}
      DATABASE_URL: ${DATABASE_URL}
      APP_NAME: ${APP_NAME:-app.main:app}
      DEBUG: ${DEBUG:-false}
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-8000}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    # Команда оставлена пустой запуск будет со скрипта
    command: []
volumes:
  pgdata: {}
